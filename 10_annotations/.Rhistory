CAZyme <- CAZyme %>% add_column(genome = rownames(CAZyme), .before = "AA") #make new column with the row names
CAZyme <- left_join(genome_df,CAZyme)
row.names(CAZyme) = CAZyme$genome
CAZyme <- CAZyme %>% dplyr::select(-genome)
CAZyme_matrix <- as.matrix(CAZyme)
merops<- read.csv("funannotate/funannotate_compare_20230809/merops/MEROPS.summary.results.csv")
row.names(merops) = merops$X
merops <- merops %>% dplyr::select(-X)
merops <- as.data.frame(t(merops))
merops <- merops %>% add_column(genome = rownames(merops), .before = "A")
merops <- left_join(genome_df,merops)
row.names(merops) = merops$genome
merops <- merops %>% dplyr::select(-genome)
merops_matrix <- as.matrix(merops)
YR<-read.delim("~/Documents/2023_02_Sporothrix/12_starfish/tyrCount.txt")
YR <- left_join(genome_df,YR)
row.names(YR) = YR$genome
YR <- YR %>% dplyr::select(-genome)
YR_matrix <- as.matrix(YR)
annotations <- rowAnnotation(
"compl" = anno_points((completeness_matrix),
width = unit(2, "cm"),
ylim = c(0, 100),
pch = 1:2,
axis_param = list(
at = c(0, 50, 100),
labels = c("0", "50", "100")),
#gp = gpar(col = 2:3),
border = FALSE),
"bp" = anno_barplot((assembly_size_matrix),
width = unit(1, "cm"),
baseline = c(18000000),
ylim = c(18000000, 44000000),
axis_param = list(
at = c(20000000, 42000000),
labels = c("20", "42")),
border = FALSE,
gp = gpar(fill = "#2E3033", col = "#2E3033", lineend = "round")),
"proteins" = anno_barplot((no_proteins_matrix),
width = unit(1, "cm"),
baseline = c(6000),
ylim = c(6000, 11000),
axis_param = list(
at = c(7000, 10000),
labels = c("7k", "10k")),
border = FALSE,
gp = gpar(fill = "#2E3033", col = "#2E3033", lineend = "round")),
"repeats" = anno_barplot((repeats_matrix),
width = unit(1, "cm"),
baseline = c(0),
ylim = c(0, 18),
axis_param = list(
at = c(0, 15),
labels = c("0", "15")),
border = FALSE,
gp = gpar(fill = "violetred3", col = "violetred3", lineend = "round")),
"YR" = anno_barplot((YR_matrix),
width = unit(1, "cm"),
baseline = c(0),
ylim = c(0, 13),
axis_param = list(
at = c(0, 10),
labels = c("0", "10")),
border = FALSE,
gp = gpar(fill = "violetred3", col = "violetred3", lineend = "round")),
gap = unit(3, "mm"),
show_annotation_name = FALSE)
library(circlize)
col_fun = colorRamp2(c(0, max(unlist(CAZyme_matrix))), c("white", "darkorchid"))
col_fun(seq(0, 3))
cazyme_hm <- Heatmap(CAZyme_matrix,
name = "CAZymes",
column_title = "CAZyme\nclasses",
column_title_gp = gpar(fontsize = 12),
col = col_fun,
cluster_rows = ML_dend,
row_dend_width = unit(2, "cm"),
column_names_gp = grid::gpar(fontsize = 8),
row_names_side = "left",
row_names_gp = grid::gpar(fontsize = 8),
width = unit(3, "cm"),
height = unit(8, "cm"),
left_annotation = annotations,
#left_annotation = rowAnnotation(
#pathogen = genome_attributes_matrix[,"mammal_pathogen"],
#soil = genome_attributes_matrix[,"soil"],
#arthropod = genome_attributes_matrix[,"arthropod"],
#wood = genome_attributes_matrix[,"wood"],
#infructescence = genome_attributes_matrix[,"infructescence"],
#macrofungus = genome_attributes_matrix[,"macrofungus"],
#col = list(arthropod = c("1" = "black",
#"NA" = "azure"),
# pathogen = c("1" = "black",
#"NA" = "white"),
#soil = c("1" = "black",
#"NA" = "white"),
#wood = c("1" = "black",
#"NA" = "white"),
#infructescence = c("1" = "black",
#"NA" = "white"),
#macrofungus = c("1" = "black",
#"NA" = "white")),
#show_legend = FALSE),
show_heatmap_legend = FALSE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(CAZyme_matrix[i, j], x, y, gp = gpar(fontsize = 6))})
cazyme_hm
col_fun = colorRamp2(c(0, max(unlist(secmets_matrix))), c("white", "deepskyblue4"))
secmets_hm <- Heatmap(secmets_matrix,
name = "BGCs",
col = col_fun,
column_title = "Biosynthetic gene\nclusters",
column_title_gp = gpar(fontsize = 12),
cluster_rows = ML_dend,
row_dend_width = unit(2, "cm"),
column_names_gp = grid::gpar(fontsize = 8),
row_names_side = "left",
row_names_gp = grid::gpar(fontsize = 8),
width = unit(3.5, "cm"),
height = unit(8, "cm"),
#right_annotation = annotations,
show_heatmap_legend = FALSE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(secmets_matrix[i, j], x, y, gp = gpar(fontsize = 6))})
secmets_hm
col_fun = colorRamp2(c(0, max(unlist(merops_matrix))), c("white", "aquamarine4"))
merops_hm <- Heatmap(merops_matrix,
name = "proteases",
column_title = "Protease\nclasses",
column_title_gp = gpar(fontsize = 12),
col = col_fun,
cluster_rows = ML_dend,
row_dend_width = unit(2, "cm"),
column_names_gp = grid::gpar(fontsize = 8),
row_names_side = "left",
row_names_gp = grid::gpar(fontsize = 8),
width = unit(4.5, "cm"),
height = unit(8, "cm"),
#right_annotation = annotations,
show_heatmap_legend = FALSE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(merops_matrix[i, j], x, y, gp = gpar(fontsize = 6))})
merops_hm
library(circlize)
col_fun = colorRamp2(c(0, 1), c("white", "grey"))
col_fun(seq(0, 3))
attributes_hm <- Heatmap(genome_attributes_lifestyle_matrix,
name = "Attributes",
column_title = "Association\n",
column_title_gp = gpar(fontsize = 12),
col = col_fun,
cluster_rows = ML_dend,
row_dend_width = unit(2, "cm"),
column_names_gp = grid::gpar(fontsize = 8),
row_names_side = "left",
row_names_gp = grid::gpar(fontsize = 8),
width = unit(3, "cm"),
height = unit(8, "cm"),
show_heatmap_legend = FALSE)
attributes_hm
install.packages("MetBrewer")
met.brewer("Troy", n=15, type="continuous")
library(MetBrewer)
met.brewer("Troy", n=15, type="continuous")
met.brewer("Troy", n=4, type="continuous")
met.brewer("Renoir", n=4, type="continuous")
met.brewer("Isfahan1", n=4, type="continuous")
met.brewer("VanGogh1", n=4, type="continuous")
met.brewer("VanGogh2", n=4, type="continuous")
met.brewer("cassatt1", n=4, type="continuous")
met.brewer("Cassatt1", n=4, type="continuous")
c <- met.brewer("Cassatt1", n=4, type="continuous")
annotations <- rowAnnotation(
"compl" = anno_points((completeness_matrix),
width = unit(2, "cm"),
ylim = c(0, 100),
pch = 1:2,
axis_param = list(
at = c(0, 50, 100),
labels = c("0", "50", "100")),
#gp = gpar(col = 2:3),
border = FALSE),
"bp" = anno_barplot((assembly_size_matrix),
width = unit(1, "cm"),
baseline = c(18000000),
ylim = c(18000000, 44000000),
axis_param = list(
at = c(20000000, 42000000),
labels = c("20", "42")),
border = FALSE,
gp = gpar(fill = "#2E3033", col = "#2E3033", lineend = "round")),
"proteins" = anno_barplot((no_proteins_matrix),
width = unit(1, "cm"),
baseline = c(6000),
ylim = c(6000, 11000),
axis_param = list(
at = c(7000, 10000),
labels = c("7k", "10k")),
border = FALSE,
gp = gpar(fill = "#2E3033", col = "#2E3033", lineend = "round")),
"repeats" = anno_barplot((repeats_matrix),
width = unit(1, "cm"),
baseline = c(0),
ylim = c(0, 18),
axis_param = list(
at = c(0, 15),
labels = c("0", "15")),
border = FALSE,
gp = gpar(fill = "#B1615C", col = "#B1615C", lineend = "round")),
"YR" = anno_barplot((YR_matrix),
width = unit(1, "cm"),
baseline = c(0),
ylim = c(0, 13),
axis_param = list(
at = c(0, 10),
labels = c("0", "10")),
border = FALSE,
gp = gpar(fill = "#B1615C", col = "#B1615C", lineend = "round")),
gap = unit(3, "mm"),
show_annotation_name = FALSE)
library(circlize)
col_fun = colorRamp2(c(0, max(unlist(CAZyme_matrix))), c("white", "darkorchid"))
col_fun(seq(0, 3))
cazyme_hm <- Heatmap(CAZyme_matrix,
name = "CAZymes",
column_title = "CAZyme\nclasses",
column_title_gp = gpar(fontsize = 12),
col = col_fun,
cluster_rows = ML_dend,
row_dend_width = unit(2, "cm"),
column_names_gp = grid::gpar(fontsize = 8),
row_names_side = "left",
row_names_gp = grid::gpar(fontsize = 8),
width = unit(3, "cm"),
height = unit(8, "cm"),
left_annotation = annotations,
#left_annotation = rowAnnotation(
#pathogen = genome_attributes_matrix[,"mammal_pathogen"],
#soil = genome_attributes_matrix[,"soil"],
#arthropod = genome_attributes_matrix[,"arthropod"],
#wood = genome_attributes_matrix[,"wood"],
#infructescence = genome_attributes_matrix[,"infructescence"],
#macrofungus = genome_attributes_matrix[,"macrofungus"],
#col = list(arthropod = c("1" = "black",
#"NA" = "azure"),
# pathogen = c("1" = "black",
#"NA" = "white"),
#soil = c("1" = "black",
#"NA" = "white"),
#wood = c("1" = "black",
#"NA" = "white"),
#infructescence = c("1" = "black",
#"NA" = "white"),
#macrofungus = c("1" = "black",
#"NA" = "white")),
#show_legend = FALSE),
show_heatmap_legend = FALSE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(CAZyme_matrix[i, j], x, y, gp = gpar(fontsize = 6))})
cazyme_hm
col_fun = colorRamp2(c(0, max(unlist(secmets_matrix))), c("white", "deepskyblue4"))
secmets_hm <- Heatmap(secmets_matrix,
name = "BGCs",
col = col_fun,
column_title = "Biosynthetic gene\nclusters",
column_title_gp = gpar(fontsize = 12),
cluster_rows = ML_dend,
row_dend_width = unit(2, "cm"),
column_names_gp = grid::gpar(fontsize = 8),
row_names_side = "left",
row_names_gp = grid::gpar(fontsize = 8),
width = unit(3.5, "cm"),
height = unit(8, "cm"),
#right_annotation = annotations,
show_heatmap_legend = FALSE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(secmets_matrix[i, j], x, y, gp = gpar(fontsize = 6))})
secmets_hm
col_fun = colorRamp2(c(0, max(unlist(merops_matrix))), c("white", "aquamarine4"))
merops_hm <- Heatmap(merops_matrix,
name = "proteases",
column_title = "Protease\nclasses",
column_title_gp = gpar(fontsize = 12),
col = col_fun,
cluster_rows = ML_dend,
row_dend_width = unit(2, "cm"),
column_names_gp = grid::gpar(fontsize = 8),
row_names_side = "left",
row_names_gp = grid::gpar(fontsize = 8),
width = unit(4.5, "cm"),
height = unit(8, "cm"),
#right_annotation = annotations,
show_heatmap_legend = FALSE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(merops_matrix[i, j], x, y, gp = gpar(fontsize = 6))})
merops_hm
library(circlize)
col_fun = colorRamp2(c(0, 1), c("white", "grey"))
col_fun(seq(0, 3))
attributes_hm <- Heatmap(genome_attributes_lifestyle_matrix,
name = "Attributes",
column_title = "Association\n",
column_title_gp = gpar(fontsize = 12),
col = col_fun,
cluster_rows = ML_dend,
row_dend_width = unit(2, "cm"),
column_names_gp = grid::gpar(fontsize = 8),
row_names_side = "left",
row_names_gp = grid::gpar(fontsize = 8),
width = unit(3, "cm"),
height = unit(8, "cm"),
show_heatmap_legend = FALSE)
attributes_hm
attributes_hm + cazyme_hm + secmets_hm + merops_hm
c <- met.brewer("Cassatt1", n=8, type="continuous")
annotations <- rowAnnotation(
"compl" = anno_points((completeness_matrix),
width = unit(2, "cm"),
ylim = c(0, 100),
pch = 1:2,
axis_param = list(
at = c(0, 50, 100),
labels = c("0", "50", "100")),
#gp = gpar(col = 2:3),
border = FALSE),
"bp" = anno_barplot((assembly_size_matrix),
width = unit(1, "cm"),
baseline = c(18000000),
ylim = c(18000000, 44000000),
axis_param = list(
at = c(20000000, 42000000),
labels = c("20", "42")),
border = FALSE,
gp = gpar(fill = "#2E3033", col = "#2E3033", lineend = "round")),
"proteins" = anno_barplot((no_proteins_matrix),
width = unit(1, "cm"),
baseline = c(6000),
ylim = c(6000, 11000),
axis_param = list(
at = c(7000, 10000),
labels = c("7k", "10k")),
border = FALSE,
gp = gpar(fill = "#2E3033", col = "#2E3033", lineend = "round")),
"repeats" = anno_barplot((repeats_matrix),
width = unit(1, "cm"),
baseline = c(0),
ylim = c(0, 18),
axis_param = list(
at = c(0, 15),
labels = c("0", "15")),
border = FALSE,
gp = gpar(fill = "#D88782", col = "#D88782", lineend = "round")),
"YR" = anno_barplot((YR_matrix),
width = unit(1, "cm"),
baseline = c(0),
ylim = c(0, 13),
axis_param = list(
at = c(0, 10),
labels = c("0", "10")),
border = FALSE,
gp = gpar(fill = "#D88782", col = "#D88782", lineend = "round")),
gap = unit(3, "mm"),
show_annotation_name = FALSE)
library(circlize)
col_fun = colorRamp2(c(0, max(unlist(CAZyme_matrix))), c("white", "darkorchid"))
col_fun(seq(0, 3))
cazyme_hm <- Heatmap(CAZyme_matrix,
name = "CAZymes",
column_title = "CAZyme\nclasses",
column_title_gp = gpar(fontsize = 12),
col = col_fun,
cluster_rows = ML_dend,
row_dend_width = unit(2, "cm"),
column_names_gp = grid::gpar(fontsize = 8),
row_names_side = "left",
row_names_gp = grid::gpar(fontsize = 8),
width = unit(3, "cm"),
height = unit(8, "cm"),
left_annotation = annotations,
#left_annotation = rowAnnotation(
#pathogen = genome_attributes_matrix[,"mammal_pathogen"],
#soil = genome_attributes_matrix[,"soil"],
#arthropod = genome_attributes_matrix[,"arthropod"],
#wood = genome_attributes_matrix[,"wood"],
#infructescence = genome_attributes_matrix[,"infructescence"],
#macrofungus = genome_attributes_matrix[,"macrofungus"],
#col = list(arthropod = c("1" = "black",
#"NA" = "azure"),
# pathogen = c("1" = "black",
#"NA" = "white"),
#soil = c("1" = "black",
#"NA" = "white"),
#wood = c("1" = "black",
#"NA" = "white"),
#infructescence = c("1" = "black",
#"NA" = "white"),
#macrofungus = c("1" = "black",
#"NA" = "white")),
#show_legend = FALSE),
show_heatmap_legend = FALSE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(CAZyme_matrix[i, j], x, y, gp = gpar(fontsize = 6))})
cazyme_hm
col_fun = colorRamp2(c(0, max(unlist(secmets_matrix))), c("white", "deepskyblue4"))
secmets_hm <- Heatmap(secmets_matrix,
name = "BGCs",
col = col_fun,
column_title = "Biosynthetic gene\nclusters",
column_title_gp = gpar(fontsize = 12),
cluster_rows = ML_dend,
row_dend_width = unit(2, "cm"),
column_names_gp = grid::gpar(fontsize = 8),
row_names_side = "left",
row_names_gp = grid::gpar(fontsize = 8),
width = unit(3.5, "cm"),
height = unit(8, "cm"),
#right_annotation = annotations,
show_heatmap_legend = FALSE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(secmets_matrix[i, j], x, y, gp = gpar(fontsize = 6))})
secmets_hm
col_fun = colorRamp2(c(0, max(unlist(merops_matrix))), c("white", "aquamarine4"))
merops_hm <- Heatmap(merops_matrix,
name = "proteases",
column_title = "Protease\nclasses",
column_title_gp = gpar(fontsize = 12),
col = col_fun,
cluster_rows = ML_dend,
row_dend_width = unit(2, "cm"),
column_names_gp = grid::gpar(fontsize = 8),
row_names_side = "left",
row_names_gp = grid::gpar(fontsize = 8),
width = unit(4.5, "cm"),
height = unit(8, "cm"),
#right_annotation = annotations,
show_heatmap_legend = FALSE,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(merops_matrix[i, j], x, y, gp = gpar(fontsize = 6))})
merops_hm
library(circlize)
col_fun = colorRamp2(c(0, 1), c("white", "grey"))
col_fun(seq(0, 3))
attributes_hm <- Heatmap(genome_attributes_lifestyle_matrix,
name = "Attributes",
column_title = "Association\n",
column_title_gp = gpar(fontsize = 12),
col = col_fun,
cluster_rows = ML_dend,
row_dend_width = unit(2, "cm"),
column_names_gp = grid::gpar(fontsize = 8),
row_names_side = "left",
row_names_gp = grid::gpar(fontsize = 8),
width = unit(3, "cm"),
height = unit(8, "cm"),
show_heatmap_legend = FALSE)
attributes_hm
attributes_hm + cazyme_hm + secmets_hm + merops_hm
met.brewer("Veronese", n=8, type="continuous")
met.brewer("Veronese", n=4, type="continuous")
#write to pdf
pdf(file="figures/sporothrix_overview.pdf", width=12, height=8)
attributes_hm + cazyme_hm + secmets_hm + merops_hm
decorate_annotation("compl", {
grid.text("Assembly", y = unit(1, "npc") + unit(18, "mm"), just = "bottom", rot = 0, gp = gpar(fontsize = 12))
})
decorate_annotation("compl", {
grid.text("completeness", y = unit(1, "npc") + unit(13, "mm"), just = "bottom", rot = 0, gp = gpar(fontsize = 12))
})
decorate_annotation("bp", {
grid.text("Mbp", y = unit(1, "npc") + unit(7, "mm"), just = "bottom", rot = 0, gp = gpar(fontsize = 12))
})
decorate_annotation("proteins", {
grid.text("Predicted", y = unit(1, "npc") + unit(18, "mm"), just = "bottom", rot = 0, gp = gpar(fontsize = 12))
})
decorate_annotation("proteins", {
grid.text("proteins", y = unit(1, "npc") + unit(13, "mm"), just = "bottom", rot = 0, gp = gpar(fontsize = 12))
})
decorate_annotation("YR", {
grid.text("YRs", y = unit(1, "npc") + unit(13, "mm"), just = "bottom", rot = 0, gp = gpar(fontsize = 12))
})
decorate_annotation("repeats", {
grid.text("% repeats", y = unit(1, "npc") + unit(7, "mm"), just = "bottom", rot = 0, gp = gpar(fontsize = 12))
})
dev.off()
attributes_hm + cazyme_hm + secmets_hm + merops_hm
met.brewer("Demuth", n=4, type="continuous")
met.brewer("Demuth", n=8, type="continuous")
#write to pdf
pdf(file="figures/sporothrix_overview.pdf", width=12, height=8)
attributes_hm + cazyme_hm + secmets_hm + merops_hm
decorate_annotation("compl", {
grid.text("Assembly", y = unit(1, "npc") + unit(18, "mm"), just = "bottom", rot = 0, gp = gpar(fontsize = 12))
})
decorate_annotation("compl", {
grid.text("completeness", y = unit(1, "npc") + unit(13, "mm"), just = "bottom", rot = 0, gp = gpar(fontsize = 12))
})
decorate_annotation("bp", {
grid.text("Mbp", y = unit(1, "npc") + unit(7, "mm"), just = "bottom", rot = 0, gp = gpar(fontsize = 12))
})
decorate_annotation("proteins", {
grid.text("Predicted", y = unit(1, "npc") + unit(18, "mm"), just = "bottom", rot = 0, gp = gpar(fontsize = 12))
})
decorate_annotation("proteins", {
grid.text("proteins", y = unit(1, "npc") + unit(13, "mm"), just = "bottom", rot = 0, gp = gpar(fontsize = 12))
})
decorate_annotation("YR", {
grid.text("YRs", y = unit(1, "npc") + unit(13, "mm"), just = "bottom", rot = 0, gp = gpar(fontsize = 12))
})
decorate_annotation("repeats", {
grid.text("% repeats", y = unit(1, "npc") + unit(7, "mm"), just = "bottom", rot = 0, gp = gpar(fontsize = 12))
})
dev.off()
